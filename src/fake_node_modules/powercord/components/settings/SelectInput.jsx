const { getModuleByDisplayName, React } = require('powercord/webpack');
const AsyncComponent = require('../AsyncComponent');
const FormItem = require('./FormItem.jsx');

const SelectTempWrapper = AsyncComponent.from(getModuleByDisplayName('SelectTempWrapper'));

class SelectInput extends React.PureComponent {
  constructor (props) {
    super(props);
    this.selectRef = React.createRef();
  }

  render () {
    const { children: title, note, required } = this.props;
    delete this.props.children;
    let { options } = this.props;
    if (this.props.searchable && this.props.lazySearch) {
      if (this.selectRef.current) {
        const { inputValue } = this.selectRef.current._reactInternalFiber.child.child.child.memoizedState;
        options = options.filter(opt => opt.label.toLowerCase().includes(inputValue));
      }
      options = options.slice(0, this.props.maxEntries || 100);
    }

    return (
      <FormItem title={title} note={note} required={required} noteHasMargin>
        <SelectTempWrapper {...this.props} _pass={{ ref: this.selectRef }} options={options}/>
      </FormItem>
    );
  }
}

module.exports = SelectInput;
